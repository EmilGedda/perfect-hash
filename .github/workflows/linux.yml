name: Linux

on: [push, pull_request]

jobs:
  build:
    name: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        buildtype: [Debug, Release, MinSizeRel, Coverage]
        cxx: [clang++, g++]
    
    steps:
    - uses: actions/checkout@v1

    - name: Generate build system
      run: CXX="${{ matrix.cxx }}" cmake -DCMAKE_BUILD_TYPE="${{ matrix.buildtype }}" .

    - name: Build
      run: cmake --build . --target tests 

    - name: Test
      run: ./tests

    - name: Coverage
      run: |
        echo Updating apt... 
        sudo apt-get update > /dev/null 2>&1
        echo Installing coverage tools...
        sudo apt-get install lcov llvm-8 -y -qq > /dev/null 2>&1
        echo #!/bin/bash > llvm-gcov
        echo exec llvm-cov gcov \"$@\" > llvm-gcov
        chmod +x llvm-gcov
        COV=gcov
        if [ "${{ matrix.cxx }}" == "clang++" ]; then
            COV=llvm-gcov
        fi
        lcov --directory . --capture --output-file coverage.info
        echo Running lcov with coverage tool $COV
        lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' \
             --output-file coverage.info \
             --gcov-tool $COV
        lcov --list coverage.info
        bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
      env:
        CODECOV_TOKEN: 541a3b5e-4f2f-436d-a38b-8309f5819e9c
      if: matrix.buildtype == 'Coverage'
